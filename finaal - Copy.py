# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'finaal.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QDialog, QApplication, QPushButton, QVBoxLayout
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt
import random
import pandas as pd
from matplotlib.animation import FuncAnimation
import time
import numpy as np
from matplotlib.figure import Figure
x=0
flag =True

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1083, 900)
        MainWindow.setStyleSheet("")
        ################################################
        self.figureecg = Figure()
        self.canvasecg = FigureCanvas(self.figureecg)
        ################################################
        self.figureemg = Figure()
        self.canvasemg = FigureCanvas(self.figureemg)
        ################################################
        self.figureeeg = Figure()
        self.canvaseeg = FigureCanvas(self.figureeeg)
        ################################################
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1081, 191))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayoutecg = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayoutecg.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutecg.setObjectName("verticalLayoutecg")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 190, 1081, 191))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayoutemg = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayoutemg.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutemg.setObjectName("verticalLayoutemg")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(0, 380, 1081, 191))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayouteeg = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayouteeg.setContentsMargins(0, 0, 0, 0)
        self.verticalLayouteeg.setObjectName("verticalLayouteeg")
        ##################################################################
        self.verticalLayoutecg.addWidget(self.canvasecg)
        self.verticalLayoutemg.addWidget(self.canvasemg)
        self.verticalLayouteeg.addWidget(self.canvaseeg)
        ##################################################################
        self.startemg = QtWidgets.QPushButton(self.centralwidget)
        self.startemg.setGeometry(QtCore.QRect(110, 760, 112, 34))
        self.startemg.setObjectName("startemg")
        self.starteeg = QtWidgets.QPushButton(self.centralwidget)
        self.starteeg.setGeometry(QtCore.QRect(110, 800, 112, 34))
        self.starteeg.setObjectName("starteeg")
        self.backwordemg = QtWidgets.QPushButton(self.centralwidget)
        self.backwordemg.setGeometry(QtCore.QRect(470, 760, 112, 34))
        self.backwordemg.setObjectName("backwordemg")
        self.backwordecg = QtWidgets.QPushButton(self.centralwidget)
        self.backwordecg.setGeometry(QtCore.QRect(470, 720, 112, 34))
        self.backwordecg.setObjectName("backwordecg")
        self.resumeecg = QtWidgets.QPushButton(self.centralwidget)
        self.resumeecg.setGeometry(QtCore.QRect(350, 720, 112, 34))
        self.resumeecg.setObjectName("resumeecg")
        self.resumeemg = QtWidgets.QPushButton(self.centralwidget)
        self.resumeemg.setGeometry(QtCore.QRect(350, 760, 112, 34))
        self.resumeemg.setObjectName("resumeemg")
        self.resumeeeg = QtWidgets.QPushButton(self.centralwidget)
        self.resumeeeg.setGeometry(QtCore.QRect(350, 800, 112, 34))
        self.resumeeeg.setObjectName("resumeeeg")
        self.stopecg = QtWidgets.QPushButton(self.centralwidget)
        self.stopecg.setGeometry(QtCore.QRect(230, 720, 112, 34))
        self.stopecg.setObjectName("stopecg")
        self.stopemg = QtWidgets.QPushButton(self.centralwidget)
        self.stopemg.setGeometry(QtCore.QRect(230, 760, 112, 34))
        self.stopemg.setObjectName("stopemg")
        self.startecg = QtWidgets.QPushButton(self.centralwidget)
        self.startecg.setGeometry(QtCore.QRect(110, 720, 112, 34))
        self.startecg.setObjectName("startecg")
        self.stopeeg = QtWidgets.QPushButton(self.centralwidget)
        self.stopeeg.setGeometry(QtCore.QRect(230, 800, 112, 34))
        self.stopeeg.setObjectName("stopeeg")
        self.zoomineeg = QtWidgets.QPushButton(self.centralwidget)
        self.zoomineeg.setGeometry(QtCore.QRect(710, 800, 112, 34))
        self.zoomineeg.setObjectName("zoomineeg")
        self.zoomoutecg = QtWidgets.QPushButton(self.centralwidget)
        self.zoomoutecg.setGeometry(QtCore.QRect(830, 720, 112, 34))
        self.zoomoutecg.setObjectName("zoomoutecg")
        self.zoominemg = QtWidgets.QPushButton(self.centralwidget)
        self.zoominemg.setGeometry(QtCore.QRect(710, 760, 112, 34))
        self.zoominemg.setObjectName("zoominemg")
        self.zoominecg = QtWidgets.QPushButton(self.centralwidget)
        self.zoominecg.setGeometry(QtCore.QRect(710, 720, 112, 34))
        self.zoominecg.setObjectName("zoominecg")
        self.forwordeeg = QtWidgets.QPushButton(self.centralwidget)
        self.forwordeeg.setGeometry(QtCore.QRect(590, 800, 112, 34))
        self.forwordeeg.setObjectName("forwordeeg")
        self.forwordemg = QtWidgets.QPushButton(self.centralwidget)
        self.forwordemg.setGeometry(QtCore.QRect(590, 760, 112, 34))
        self.forwordemg.setObjectName("forwordemg")
        self.forwordecg = QtWidgets.QPushButton(self.centralwidget)
        self.forwordecg.setGeometry(QtCore.QRect(590, 720, 112, 34))
        self.forwordecg.setObjectName("forwordecg")
        self.backwordeeg = QtWidgets.QPushButton(self.centralwidget)
        self.backwordeeg.setGeometry(QtCore.QRect(470, 800, 112, 34))
        self.backwordeeg.setObjectName("backwordeeg")
        self.zoomouteeg = QtWidgets.QPushButton(self.centralwidget)
        self.zoomouteeg.setGeometry(QtCore.QRect(830, 800, 112, 34))
        self.zoomouteeg.setObjectName("zoomouteeg")
        self.zoomoutemg = QtWidgets.QPushButton(self.centralwidget)
        self.zoomoutemg.setGeometry(QtCore.QRect(830, 760, 112, 34))
        self.zoomoutemg.setObjectName("zoomoutemg")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 760, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 800, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 720, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1083, 31))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        self.menuprint = QtWidgets.QMenu(self.menubar)
        self.menuprint.setObjectName("menuprint")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionopen_ecg = QtWidgets.QAction(MainWindow)
        self.actionopen_ecg.setObjectName("actionopen_ecg")
        self.actionopen_EEG = QtWidgets.QAction(MainWindow)
        self.actionopen_EEG.setObjectName("actionopen_EEG")
        self.actionopen_EMG = QtWidgets.QAction(MainWindow)
        self.actionopen_EMG.setObjectName("actionopen_EMG")
        self.actionExport_report = QtWidgets.QAction(MainWindow)
        self.actionExport_report.setObjectName("actionExport_report")
        self.actionexport_PDF = QtWidgets.QAction(MainWindow)
        self.actionexport_PDF.setObjectName("actionexport_PDF")
        self.menufile.addAction(self.actionopen_ecg)
        self.menufile.addAction(self.actionopen_EEG)
        self.menufile.addAction(self.actionopen_EMG)
        self.menuprint.addAction(self.actionexport_PDF)
        self.menubar.addAction(self.menufile.menuAction())
        self.menubar.addAction(self.menuprint.menuAction())
        #######################################################
        self.startecg.clicked.connect(self.start_ecg)
        self.stopecg.clicked.connect(self.stop_ecg)
        self.resumeecg.clicked.connect(self.resume_ecg)
        self.backwordecg.clicked.connect(self.backword_ecg)
        self.forwordecg.clicked.connect(self.forword_ecg)
        self.zoominecg.clicked.connect(self.zoomin_ecg)
        # self.zoomoutecg.clicked.connect(self.zoomout_ecg)
        # #######################################################
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.startemg.setText(_translate("MainWindow", "start"))
        self.startemg.setShortcut(_translate("MainWindow", "A"))
        self.starteeg.setText(_translate("MainWindow", "start"))
        self.starteeg.setShortcut(_translate("MainWindow", "Z"))
        self.backwordemg.setText(_translate("MainWindow", "backword"))
        self.backwordemg.setShortcut(_translate("MainWindow", "F"))
        self.backwordecg.setText(_translate("MainWindow", "backword"))
        self.backwordecg.setShortcut(_translate("MainWindow", "R"))
        self.resumeecg.setText(_translate("MainWindow", "resume"))
        self.resumeecg.setShortcut(_translate("MainWindow", "E"))
        self.resumeemg.setText(_translate("MainWindow", "resume"))
        self.resumeemg.setShortcut(_translate("MainWindow", "D"))
        self.resumeeeg.setText(_translate("MainWindow", "resume"))
        self.resumeeeg.setShortcut(_translate("MainWindow", "C"))
        self.stopecg.setText(_translate("MainWindow", "stop"))
        self.stopecg.setShortcut(_translate("MainWindow", "W"))
        self.stopemg.setText(_translate("MainWindow", "stop"))
        self.stopemg.setShortcut(_translate("MainWindow", "S"))
        self.startecg.setText(_translate("MainWindow", "start"))
        self.startecg.setShortcut(_translate("MainWindow", "Q"))
        self.stopeeg.setText(_translate("MainWindow", "stop"))
        self.stopeeg.setShortcut(_translate("MainWindow", "X"))
        self.zoomineeg.setText(_translate("MainWindow", "zoom in"))
        self.zoomineeg.setShortcut(_translate("MainWindow", "N"))
        self.zoomoutecg.setText(_translate("MainWindow", "zoom out"))
        self.zoomoutecg.setShortcut(_translate("MainWindow", "U"))
        self.zoominemg.setText(_translate("MainWindow", "zoom in"))
        self.zoominemg.setShortcut(_translate("MainWindow", "H"))
        self.zoominecg.setText(_translate("MainWindow", "zoom in"))
        self.zoominecg.setShortcut(_translate("MainWindow", "Y"))
        self.forwordeeg.setText(_translate("MainWindow", "forword"))
        self.forwordeeg.setShortcut(_translate("MainWindow", "B"))
        self.forwordemg.setText(_translate("MainWindow", "forword"))
        self.forwordemg.setShortcut(_translate("MainWindow", "G"))
        self.forwordecg.setText(_translate("MainWindow", "forword"))
        self.forwordecg.setShortcut(_translate("MainWindow", "T"))
        self.backwordeeg.setText(_translate("MainWindow", "backword"))
        self.backwordeeg.setShortcut(_translate("MainWindow", "V"))
        self.zoomouteeg.setText(_translate("MainWindow", "zoom out"))
        self.zoomouteeg.setShortcut(_translate("MainWindow", "M"))
        self.zoomoutemg.setText(_translate("MainWindow", "zoom out"))
        self.zoomoutemg.setShortcut(_translate("MainWindow", "J"))
        self.label.setText(_translate("MainWindow", "EMG"))
        self.label_2.setText(_translate("MainWindow", "EEG"))
        self.label_3.setText(_translate("MainWindow", "ECG"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.menuprint.setTitle(_translate("MainWindow", "print"))
        self.actionopen_ecg.setText(_translate("MainWindow", "open ECG"))
        self.actionopen_ecg.setShortcut(_translate("MainWindow", "1"))
        self.actionopen_EEG.setText(_translate("MainWindow", "open EEG"))
        self.actionopen_EEG.setShortcut(_translate("MainWindow", "2"))
        self.actionopen_EMG.setText(_translate("MainWindow", "open EMG"))
        self.actionopen_EMG.setShortcut(_translate("MainWindow", "3"))
        self.actionExport_report.setText(_translate("MainWindow", "Export report"))
        self.actionexport_PDF.setText(_translate("MainWindow", "export PDF"))
        self.actionexport_PDF.setShortcut(_translate("MainWindow", "P"))
    def start_ecg(self):
        global flag
        flag =True
        self.figureecg.clear()
        ax=self.figureecg.add_subplot(1,1,1)
        lines = [ax.plot([],[])[0] for ax in self.figureecg.axes]
        def update(i):
            print("animate")
            global x
            global flag
            if not flag:
                self.ani.event_source.stop()
            else:
                x=i
                data_set1= pd.read_csv('ecg1.csv')
                xa=data_set1.iloc[2*int(((i-100)+abs(i-100))/2):2*i,0].values
                y1=data_set1.iloc[2*int(((i-100)+abs(i-100))/2):2*i,1].values
                print(xa)
                ax=self.figureecg.gca()
                ax=self.figureecg.add_subplot(1,1,1)
                ax.cla()
                ax.plot(xa,y1,'k')
                self.canvasecg.draw()
            return lines
        self.ani = FuncAnimation(self.figureecg, update,blit=True)
    
    def stop_ecg(self):
        global x
        print(x)
        global flag
        flag=False

    def resume_ecg(self):
        global flag
        flag =True
        c=x
        self.figureecg.clear()
        ax=self.figureecg.add_subplot(1,1,1)
        lines = [ax.plot([],[])[0] for ax in self.figureecg.axes]
        def update(i):
            print("animate")
            global x
            global flag
            if not flag:
                self.ani.event_source.stop()
            else:

                x=i+c
                data_set1= pd.read_csv('ecg1.csv')
                xa=data_set1.iloc[2*int(((x-100)+abs(x-100))/2):2*x,0].values
                y1=data_set1.iloc[2*int(((x-100)+abs(x-100))/2):2*x,1].values
                print(xa)
                ax=self.figureecg.gca()
                ax=self.figureecg.add_subplot(1,1,1)
                ax.cla()
                ax.plot(xa,y1,'k')
                self.canvasecg.draw()
            return lines
        self.ani = FuncAnimation(self.figureecg, update,blit=True)
    def backword_ecg(self):
        #print("plot")
        global x
        x=x-10
        print(x)
        ds=pd.read_csv('ecg1.csv')
        x=ds.iloc[2*int(((x-100)+abs(x-100))/2):2*x,0].values
        y=ds.iloc[2*int(((x-100)+abs(x-100))/2):2*x,1].values
        self.figureecg.clear()
        ax=self.figureecg.add_subplot(111)
        ax.plot(x,y)
        self.canvasecg.draw()
    def forword_ecg(self):
        #print("plot")
        global x
        x=x+10
        ds=pd.read_csv('ecg1.csv')
        x=ds.iloc[2*int(((x-100)+abs(x-100))/2):2*x,0].values
        y=ds.iloc[2*int(((x-100)+abs(x-100))/2):2*x,1].values
        #y=ds.iloc[2*int(((x-100)+abs(x-100))/2):2*x,1].values
        self.figureecg.clear()
        ax=self.figureecg.add_subplot(111)
        ax.plot(x,y)
        self.canvasecg.draw()
    def zoomin_ecg(self):
        valueX=0.1
        valueY=0.5
        self.figureecg.clear()
        ax=self.figureecg.add_subplot(111)
        self.canvasecg.scale(valueX, valueY)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
